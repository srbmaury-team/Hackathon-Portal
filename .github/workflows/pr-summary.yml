name: üß† PR Summary Generator

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  summarize:
    name: Generate PR Summary
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # <-- important! ensures full git history

      - name: üîÑ Ensure main branch is available
        run: |
          git fetch origin main
          echo "‚úÖ Main branch fetched."

      - name: üìä Get changed files statistics
        id: file-stats
        run: |
          BASE_BRANCH=$(git merge-base origin/main HEAD || echo "origin/main")
          
          # Get list of changed files with status
          git diff --name-status $BASE_BRANCH > file-changes.txt
          
          # Get detailed diff
          git diff $BASE_BRANCH > changes.diff
          
          # Count changes
          FILES_CHANGED=$(wc -l < file-changes.txt | tr -d ' ')
          ADDITIONS=$(git diff --numstat $BASE_BRANCH | awk '{sum+=$1} END {print sum}')
          DELETIONS=$(git diff --numstat $BASE_BRANCH | awk '{sum+=$2} END {print sum}')
          
          echo "FILES_CHANGED=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "ADDITIONS=$ADDITIONS" >> $GITHUB_OUTPUT
          echo "DELETIONS=$DELETIONS" >> $GITHUB_OUTPUT
          
          echo "‚úÖ Statistics gathered: $FILES_CHANGED files, +$ADDITIONS/-$DELETIONS"

      - name: üìã Prepare file changes list
        id: file-list
        run: |
          echo "FILE_LIST<<EOF" >> $GITHUB_OUTPUT
          cat file-changes.txt | while read status file; do
            case $status in
              A) echo "- üÜï **Added:** \`$file\`" ;;
              M) echo "- ‚úèÔ∏è **Modified:** \`$file\`" ;;
              D) echo "- üóëÔ∏è **Deleted:** \`$file\`" ;;
              R*) echo "- üîÑ **Renamed:** \`$file\`" ;;
              *) echo "- üìù **Changed:** \`$file\`" ;;
            esac
          done >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: ü§ñ Generate AI-Powered Bulletwise Summary
        id: ai-summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "üß† Generating detailed bulletwise analysis..."
          
          # Escape and prepare diff for JSON
          DIFF_CONTENT=$(head -c 15000 changes.diff | jq -Rs .)
          
          SUMMARY=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-4",
              "messages": [
                {
                  "role": "system",
                  "content": "You are an expert code reviewer. Analyze git diffs and provide clear, structured bullet points explaining the changes. Focus on: 1) What changed 2) Why it matters 3) Impact on the codebase. Use emojis for better readability."
                },
                {
                  "role": "user",
                  "content": "Analyze this PR diff and provide a detailed bulletwise explanation:\n\n## Instructions:\n- Start with a brief overview\n- List key changes as bullet points (use sub-bullets for details)\n- Highlight any breaking changes or important notes\n- Mention testing additions/changes\n- Note documentation updates\n\n## Diff:\n'"$DIFF_CONTENT"'"
                }
              ],
              "temperature": 0.3,
              "max_tokens": 1500
            }' | jq -r '.choices[0].message.content // "Failed to generate summary"')
          
          echo "SUMMARY<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "‚úÖ AI Summary generated"

      - name: üí¨ Post PR Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          # Build the comment body
          cat << 'COMMENT_EOF' > comment.md
          ## ü§ñ Automated PR Analysis
          
          ### üìä Change Statistics
          - **Files Changed:** ${{ steps.file-stats.outputs.FILES_CHANGED }}
          - **Lines Added:** +${{ steps.file-stats.outputs.ADDITIONS }}
          - **Lines Deleted:** -${{ steps.file-stats.outputs.DELETIONS }}
          
          ---
          
          ### üìÅ Files Changed
          ${{ steps.file-list.outputs.FILE_LIST }}
          
          ---
          
          ### üîç AI-Generated Summary
          ${{ steps.ai-summary.outputs.SUMMARY }}
          
          ---
          
          <sub>ü§ñ This summary was automatically generated by AI. Review carefully and use your judgment.</sub>
          COMMENT_EOF
          
          # Post the comment
          gh pr comment $PR_NUMBER --body-file comment.md
          
          echo "üí¨ Bulletwise summary posted to PR #$PR_NUMBER"

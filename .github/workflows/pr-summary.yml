name: PR Summary Generator

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  summarize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate diff safely
        run: |
          echo "Fetching main branch..."
          git fetch origin main || echo "⚠️ No main branch found on origin"

          echo "Finding merge base..."
          MERGE_BASE=$(git merge-base origin/main HEAD 2>/dev/null || echo "")
          if [ -z "$MERGE_BASE" ]; then
            echo "⚠️ No common base with main — generating full diff instead."
            git diff > changes.diff
          else
            echo "✅ Found merge base: $MERGE_BASE"
            git diff "$MERGE_BASE"...HEAD > changes.diff
          fi

          echo "Generated diff size: $(wc -c < changes.diff) bytes"

      - name: Generate and Post PR Summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GH_PAT: ${{ secrets.GH_PAT }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          echo "🧠 Generating summary using OpenAI..."

          DIFF_CONTENT=$(head -c 12000 changes.diff | jq -Rs .)
          REQUEST_BODY=$(jq -n --arg diff "$DIFF_CONTENT" '{
            model: "gpt-4o-mini",
            messages: [
              {
                role: "system",
                content: "You are a helpful assistant that summarizes GitHub pull requests clearly and concisely."
              },
              {
                role: "user",
                content: ("Summarize the following PR diff in 3–5 concise bullet points:\n\n" + $diff)
              }
            ]
          }')

          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "$REQUEST_BODY")

          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // empty')

          if [ -z "$SUMMARY" ]; then
            echo "❌ Failed to generate summary."
            echo "$RESPONSE"
            exit 1
          fi

          echo "✅ Summary generated successfully."
          echo "$SUMMARY"

          echo "💬 Posting summary as PR comment..."
          curl -s -H "Authorization: token $GH_PAT" \
            -X POST \
            -d "{\"body\": \"### 🤖 AI Summary\n\n$SUMMARY\"}" \
            "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"
